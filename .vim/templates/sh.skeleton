#!/usr/bin/env bash

###  DEBUG          ###########################################################
set -u -e -o errtrace -o pipefail
trap "echo ""errexit: line $LINENO. Exit code: $?"" >&2" ERR
IFS=$'\n\t'

###  DESCRIPTION    ###########################################################
# A script to

###  VARIABLES      ###########################################################

_FULL_PATH="$(realpath "${0}")"
_PATH=${_FULL_PATH%/*}
_FULL_FN=${_FULL_PATH##*/}
_EXT=${_FULL_FN##*.}
_FN=${_FULL_FN%.*}
_logfile=$_PATH/$_FN.log

###  FUNCTIONS      ###########################################################

_write_log() {
  # run a command $@, write it to a log matching the name of thsi script.
  $@ >> $_logfile
}

_print_help() {
  cat <<HEREDOC

Help text goes here

Usage:
  ${_FULL_FN} [<arguments>]
  ${_FULL_FN} -h | --help

Options:
  -h    Show this screen.
  -a    an option
HEREDOC
}

_simple() {
  printf "Perform a simple operation.\\n"
}


###  MAIN           ###########################################################


_main() {
    if [[ -z "$*" ]]
        then _print_help;
    fi
    while getopts ":ha" opt; do
        case $opt in
            a)
              _write_log echo -e "Script Started >>>> $(date +%y%m%d)\n\n"
              _simple
              _write_log echo -e "Script complete >>>> $(date +%y%m%d)\n\n"
            ;;
            h)
            _print_help
            ;;
            \?)
            echo "Invalid option: -$OPTARG" >&2
            ;;
        esac
    done
}

_main "$@"
